-- Drop tables with exception handling
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE refresh_tokens CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE audit_logs CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE tickets CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE users CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
END IF;
END;
/

-- Create tables
CREATE TABLE users (
                       id CHAR(36) PRIMARY KEY,
                       username VARCHAR(255) NOT NULL UNIQUE,
                       email VARCHAR(255) NOT NULL UNIQUE,
                       password VARCHAR(255) NOT NULL,
                       created_at TIMESTAMP NOT NULL,
                       updated_at TIMESTAMP NOT NULL,
                       email_verified NUMBER(1) NOT NULL DEFAULT 0,
                       role VARCHAR(20) NOT NULL,
                       CONSTRAINT chk_role CHECK (role IN ('EMPLOYEE', 'IT_SUPPORT'))
);

CREATE TABLE tickets (
                         id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         title VARCHAR(255) NOT NULL,
                         description CLOB NOT NULL,
                         priority VARCHAR(20) NOT NULL,
                         CONSTRAINT chk_priority CHECK (priority IN ('LOW', 'MEDIUM', 'HIGH')),
                         category VARCHAR(20) NOT NULL,
                         CONSTRAINT chk_category CHECK (category IN ('HARDWARE', 'SOFTWARE', 'NETWORK')),
                         creation_date TIMESTAMP NOT NULL,
                         status VARCHAR(20) DEFAULT 'NEW' NOT NULL,
                         CONSTRAINT chk_status CHECK (status IN ('NEW', 'IN_PROGRESS', 'RESOLVED', 'CLOSED')),
                         created_by CHAR(36) NOT NULL,
                         FOREIGN KEY (created_by) REFERENCES users(id)
);

CREATE TABLE audit_logs (
                            id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            ticket_id NUMBER NOT NULL,
                            user_id CHAR(36) NOT NULL,
                            action_type VARCHAR(20) NOT NULL,
                            CONSTRAINT chk_action_type CHECK (action_type IN ('CREATE', 'UPDATE', 'DELETE', 'COMMENT')),
                            old_status VARCHAR(255),
                            new_status VARCHAR(255),
                            comment_content CLOB,
                            action_date TIMESTAMP NOT NULL,
                            FOREIGN KEY (ticket_id) REFERENCES tickets(id),
                            FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE refresh_tokens (
                                id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                token VARCHAR(255) NOT NULL UNIQUE,
                                user_id CHAR(36) NOT NULL,
                                expiry_date TIMESTAMP NOT NULL);

-- Create indexes
CREATE INDEX idx_users_username ON users (username);
CREATE INDEX idx_users_email ON users (email);
